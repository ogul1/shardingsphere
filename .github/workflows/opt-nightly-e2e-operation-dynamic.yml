#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Modified Nightly - E2E Operation Dynamic
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dspotless.apply.skip=true -Dfailsafe.skipAfterFailureCount=1
    -Dio.netty.leakDetectionLevel=advanced
jobs:
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml
  e2e-operation-job:
    name: e2e-operation-job (${{ matrix.java-version }}, ${{ matrix.operation }},
      ${{ matrix.image }})
    needs: global-environment
    runs-on: ${{ needs.global-environment.outputs.GLOBAL_RUNS_ON }}
    timeout-minutes: 40
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        java-version: ${{ fromJson(github.event.inputs.java-version) }}
        operation: ${{ fromJson(github.event.inputs.operation) }}
        image: ${{ fromJson(github.event.inputs.image) }}
        exclude:
        - operation: transaction
          image:
            type: it.docker.mariadb.version
            version: mariadb:11
        - operation: showprocesslist
          image:
            type: it.docker.postgresql.version
            version: postgres:10-alpine,postgres:11-alpine,postgres:12-alpine,postgres:13-alpine,postgres:14-alpine
        - operation: showprocesslist
          image:
            type: it.docker.opengauss.version
            version: enmotech/opengauss:2.1.0,enmotech/opengauss:3.0.0
        - operation: showprocesslist
          image:
            type: it.docker.mariadb.version
            version: mariadb:11
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-e2e-operation-job (${{ matrix.java-version }}, ${{ matrix.operation }}, ${{ matrix.image }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/shardingsphere/shardingsphere', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout Project
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Retrieve Maven Caches
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-${{
          github.sha }}
        restore-keys: |-
          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-
          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-
    - run: touch optcd-4.txt
    - name: Setup JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java-version }}
    - run: touch optcd-5.txt
    - name: Build ${{ matrix.operation }} E2E Image
      run: ./mvnw -B clean install -am -pl test/e2e/operation/${{ matrix.operation
        }} -Pit.env.docker -DskipTests
    - run: touch optcd-6.txt
    - name: Run ${{ matrix.operation }} on ${{ matrix.image.version }}
      run: ./mvnw -nsu -B install -f test/e2e/operation/${{ matrix.operation }}/pom.xml
        -D${{ matrix.operation }}.it.env.type=docker -D${{ matrix.operation }}.${{
        matrix.image.type }}=${{ matrix.image.version }}
    - run: touch optcd-7.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-e2e-operation-job (${{ matrix.java-version }}, ${{ matrix.operation
          }}, ${{ matrix.image }})
        path: /home/runner/inotifywait-log-e2e-operation-job (${{ matrix.java-version
          }}, ${{ matrix.operation }}, ${{ matrix.image }}).csv
'on':
- push
- workflow_dispatch
