#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Modified CI
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dspotless.apply.skip=true
jobs:
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml
  ci:
    name: ci
    needs: global-environment
    runs-on: ${{ needs.global-environment.outputs.GLOBAL_RUNS_ON }}
    timeout-minutes: 30
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-ci.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/shardingsphere/shardingsphere', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Setup JDK 11 for Build
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11
    - run: touch optcd-4.txt
    - uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-${{
          hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-
    - run: touch optcd-5.txt
    - name: Build Project with Maven
      run: ./mvnw clean install -B -ntp -DskipTests -T1C
    - run: touch optcd-6.txt
    - name: Setup JDK 8 for Test
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 8
    - run: touch optcd-7.txt
    - name: Run Tests with JDK 8
      run: ./mvnw install -T1C -B -ntp -fae
    - run: touch optcd-8.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-ci
        path: /home/runner/inotifywait-log-ci.csv
'on':
- push
- workflow_dispatch
